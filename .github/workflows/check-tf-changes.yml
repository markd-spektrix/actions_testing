name: Check If TF Changes
run-name: Checking TF Changes
on: pull_request
jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write

    steps:
      - uses: actions/checkout@v3
      
      - uses: hashicorp/setup-terraform@v2
      
      - name: View context attributes
        uses: actions/github-script@v6
        with:
            script: |
                console.log(context)
        
        continue-on-error: true

      - name: "Approve pull request"
        uses: "actions/github-script@v6"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pullRequest = context.payload.pull_request
            const repository = context.repo
            console.log(pullRequest)

            await github.rest.pulls.createReview({
              event: "APPROVE",
              owner: repository.owner,
              repo: repository.repo,
              pull_number: pullRequest.number,
            })

      - name: Fake Check TFPlan
        id: check_tf
        shell: pwsh
        run: echo "random-id=$(echo $TRUE)" >> $GITHUB_OUTPUT

      - name: Fake Conditional Approve
        id: approve
        if: ${{ steps.check_tf.outputs.random-id }} == '$TRUE'

        shell: pwsh
        run: echo  ${{ steps.check_tf.outputs.random-id }}
    #   - name: Terraform fmt
    #     id: fmt
    #     run: terraform fmt -check
    #     continue-on-error: true
      
    #   - name: Terraform Init
    #     id: init
    #     run: terraform init
      
    #   - name: Terraform Validate
    #     id: validate
    #     run: terraform validate -no-color
      
    #   - name: Terraform Plan
    #     id: plan
    #     run: terraform plan -no-color
    #     continue-on-error: true
        
    #   - name: Check TF Changes
    #     if: github.event_name == 'pull_request'
    #     id: change_check        
    #     shell: pwsh
    #     env:
    #       PLAN: ${{ steps.plan.outputs.stdout }}
    #     run: |
    #         if ( $env:PLAN.Contains("No changes. Your infrastructure matches the configuration.")) {
    #             echo "No Changes Planned -- Auto merge & Deploy"
    #         }
    #         else {
    #             echo "Changes planned -- Check it!"
    #         }
    #   - name: View context attributes
    #     uses: actions/github-script@v6
    #     with:
    #         script: console.log(context)